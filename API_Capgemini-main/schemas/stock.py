def stockEntity(item) -> dict:
    """
    Converts a MongoDB query result item to a dictionary representing a Stock entity.

    Args:
        item: MongoDB query result item.

    Returns:
        dict: Dictionary representing the Stock entity.
    """
    if item is not None:
        return {
            "siren": item.get("siren"),
            "siret": item.get("siret"),
            "nic": item.get("nic"),
            "statutDiffusionEtablissement": item.get("statutDiffusionEtablissement"),
            "dateCreationEtablissement": item.get("dateCreationEtablissement"),
            "trancheEffectifsEtablissement": item.get("trancheEffectifsEtablissement"),
            "anneeEffectifsEtablissement": item.get("anneeEffectifsEtablissement"),
            "activitePrincipaleRegistreMetiersEtablissement": item.get("activitePrincipaleRegistreMetiersEtablissement"),
            "dateDernierTraitementEtablissement": item.get("dateDernierTraitementEtablissement"),
            "etablissementSiege": item.get("etablissementSiege"),
            "nombrePeriodesEtablissement": item.get("nombrePeriodesEtablissement"),
            "complementAdresseEtablissement": item.get("complementAdresseEtablissement"),
            "numeroVoieEtablissement": item.get("numeroVoieEtablissement"),
            "indiceRepetitionEtablissement": item.get("indiceRepetitionEtablissement"),
            "typeVoieEtablissement": item.get("typeVoieEtablissement"),
            "libelleVoieEtablissement": item.get("libelleVoieEtablissement"),
            "codePostalEtablissement": item.get("codePostalEtablissement"),
            "libelleCommuneEtablissement": item.get("libelleCommuneEtablissement"),
            "libelleCommuneEtrangerEtablissement": item.get("libelleCommuneEtrangerEtablissement"),
            "distributionSpecialeEtablissement": item.get("distributionSpecialeEtablissement"),
            "codeCommuneEtablissement": item.get("codeCommuneEtablissement"),
            "codeCedexEtablissement": item.get("codeCedexEtablissement"),
            "libelleCedexEtablissement": item.get("libelleCedexEtablissement"),
            "codePaysEtrangerEtablissement": item.get("codePaysEtrangerEtablissement"),
            "libellePaysEtrangerEtablissement": item.get("libellePaysEtrangerEtablissement"),
            "complementAdresse2Etablissement": item.get("complementAdresse2Etablissement"),
            "numeroVoie2Etablissement": item.get("numeroVoie2Etablissement"),
            "indiceRepetition2Etablissement": item.get("indiceRepetition2Etablissement"),
            "typeVoie2Etablissement": item.get("typeVoie2Etablissement"),
            "libelleVoie2Etablissement": item.get("libelleVoie2Etablissement"),
            "codePostal2Etablissement": item.get("codePostal2Etablissement"),
            "libelleCommune2Etablissement": item.get("libelleCommune2Etablissement"),
            "libelleCommuneEtranger2Etablissement": item.get("libelleCommuneEtranger2Etablissement"),
            "distributionSpeciale2Etablissement": item.get("distributionSpeciale2Etablissement"),
            "codeCommune2Etablissement": item.get("codeCommune2Etablissement"),
            "codeCedex2Etablissement": item.get("codeCedex2Etablissement"),
            "libelleCedex2Etablissement": item.get("libelleCedex2Etablissement"),
            "codePaysEtranger2Etablissement": item.get("codePaysEtranger2Etablissement"),
            "libellePaysEtranger2Etablissement": item.get("libellePaysEtranger2Etablissement"),
            "dateDebut": item.get("dateDebut"),
            "etatAdministratifEtablissement": item.get("etatAdministratifEtablissement"),
            "enseigne1Etablissement": item.get("enseigne1Etablissement"),
            "enseigne2Etablissement": item.get("enseigne2Etablissement"),
            "enseigne3Etablissement": item.get("enseigne3Etablissement"),
            "denominationUsuelleEtablissement": item.get("denominationUsuelleEtablissement"),
            "activitePrincipaleEtablissement": item.get("activitePrincipaleEtablissement"),
            "nomenclatureActivitePrincipaleEtablissement": item.get("nomenclatureActivitePrincipaleEtablissement"),
            "caractereEmployeurEtablissement": item.get("caractereEmployeurEtablissement"),
            "libelleCommune2Etablissement": item.get("libelleCommune2Etablissement"),
        }
    else:
        # Return a default dictionary with None values if the item is None
        return {
            "siren": None,
            "siret": None,
            "nic": None,
            "statutDiffusionEtablissement": None,
            "dateCreationEtablissement": None,
            "trancheEffectifsEtablissement": None,
            "anneeEffectifsEtablissement": None,
            "activitePrincipaleRegistreMetiersEtablissement": None,
            "dateDernierTraitementEtablissement": None,
            "etablissementSiege": None,
            "nombrePeriodesEtablissement": None,
            "complementAdresseEtablissement": None,
            "numeroVoieEtablissement": None,
            "indiceRepetitionEtablissement": None,
            "typeVoieEtablissement": None,
            "libelleVoieEtablissement": None,
            "codePostalEtablissement": None,
            "libelleCommuneEtablissement": None,
            "libelleCommuneEtrangerEtablissement": None,
            "distributionSpecialeEtablissement": None,
            "codeCommuneEtablissement": None,
            "codeCedexEtablissement": None,
            "libelleCedexEtablissement": None,
            "codePaysEtrangerEtablissement": None,
            "libellePaysEtrangerEtablissement": None,
            "complementAdresse2Etablissement": None,
            "numeroVoie2Etablissement": None,
            "indiceRepetition2Etablissement": None,
            "typeVoie2Etablissement": None,
            "libelleVoie2Etablissement": None,
            "codePostal2Etablissement": None,
            "libelleCommune2Etablissement": None,
            "libelleCommuneEtranger2Etablissement": None,
            "distributionSpeciale2Etablissement": None,
            "codeCommune2Etablissement": None,
            "codeCedex2Etablissement": None,
            "libelleCedex2Etablissement": None,
            "codePaysEtranger2Etablissement": None,
            "libellePaysEtranger2Etablissement": None,
            "dateDebut": None,
            "etatAdministratifEtablissement": None,
            "enseigne1Etablissement": None,
            "enseigne2Etablissement": None,
            "enseigne3Etablissement": None,
            "denominationUsuelleEtablissement": None,
            "activitePrincipaleEtablissement": None,
            "nomenclatureActivitePrincipaleEtablissement": None,
            "caractereEmployeurEtablissement": None,
            "libelleCommune2Etablissement": None,
        }

def stocksEntity(entity) -> list:
    return [stockEntity(item) for item in entity]
